syntax = "proto3";

service Raft {
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse);
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);

  rpc SetIsActive(SetIsActiveRequest) returns (SetIsActiveResponse);
  rpc GetIsActive(GetIsActiveRequest) returns (GetIsActiveResponse);
  
  rpc AddPeer(AddPeerRequest) returns (AddPeerResponse);
  rpc RemovePeer(RemovePeerRequest) returns (RemovePeerResponse);
  rpc GetPeers(GetPeersRequest) returns (GetPeersResponse);
  rpc GetNodeId(GetNodeIdRequest) returns (GetNodeIdResponse);
  rpc GetRole(GetRoleRequest) returns (GetRoleResponse);

}

message RequestVoteRequest {
  int32 term = 1;
  int32 candidateId = 2;
  int32 lastLogIndex = 3;
  int32 lastLogTerm = 4;
}

message RequestVoteResponse {
  int32 term = 1;
  bool voteGranted = 2;
}

message AppendEntriesRequest {
  int32 term = 1;
  int32 leaderId = 2;
  int32 prevLogIndex = 3;
  int32 prevLogTerm = 4;
  repeated LogEntry entries = 5;
  int32 leaderCommit = 6;
}

message AppendEntriesResponse {
  int32 term = 1;
  bool success = 2;
}

message LogEntry {
  int32 term = 1;
  string command = 2;
}

message SetIsActiveRequest { bool active = 1; }

message SetIsActiveResponse { bool success = 1; }

message GetIsActiveRequest { int32 nodeId = 1; }

message GetIsActiveResponse { bool active = 1; }

message AddPeerRequest { int32 port = 2; }

message AddPeerResponse { bool success = 1; }

message RemovePeerRequest { int32 port = 1; }

message RemovePeerResponse { bool success = 1; }

message GetPeersRequest { int32 nodeId = 1; }

message GetPeersResponse { repeated int32 peers = 1; }

message GetNodeIdRequest { int32 port = 1; }

message GetNodeIdResponse { int32 nodeId = 1; }

message GetRoleRequest { int32 nodeId = 1; }

message GetRoleResponse { string role = 1; }
